import React, { useState,useEffect } from 'react';
import FormField from '../components/FormField';
import Loader from '../components/Loader';
import Card from '../components/Card';
const Home = () => {

  const [loading, setLoading] = useState(false); 
  const [searchtext,setSearchtext] = useState("");
  const [allPosts,setAllPosts] = useState({});
  const [searchResults,setSearchResults]= useState(null);
  const [searchTimeout,setSearchTimeout] = useState(null);
  useEffect(()=>{
    const fetchPosts = async ()=>{
      setLoading(true);
      try{
        const response = await fetch("http://localhost:8080/api/v1/post",
        {
          method:"GET",
          headers:{
            'Content-Type':"application/json"
          }
        })
        console.log(response.ok)
        if(response.ok){
          const result = await response.json();
          setAllPosts(result.data.reverse());
          console.log(allPosts);
        }
      }catch(error){
        console.log(error);
      }finally{
        setLoading(false);
      }
    }
    fetchPosts();
  },[]);


  const RenderCards = ({data,title})=>{
    if(data?.length>0){
      return data.map((post)=> <Card key={post._id} {...post}/>)
    }
    return (
      <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>
    )
  }

  const handleSearchChange = (e)=>{
    clearTimeout(searchTimeout);
    setSearchtext(e.target.value);
    setSearchTimeout(
    setTimeout(() => {
      const searchResults = allPosts.filter((item)=> item.name.toLowercase().includes(searchtext.toLowerCase()) || item.
      prompt.toLowerCase().includes(searchtext.toLowerCase()))
      setSearchResults(searchResults);
    }, 500)
    )
  }



  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
          The Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
          Browse through a collection of imaginative and visually stunning images generated by DALL-E AI
        </p>
        <div className="mt-16">
          <FormField 
          labelName="Search Posts"
          type="text"
          name = "text"
          placeholder="Ex:hills,arun.."
          value = {searchtext}
          handleChange={handleSearchChange}
          />
        </div>

        <div className="mt-10">
          {loading ?(
            <div className="flex justify-center items-center">
              <Loader />
            </div>
          ):(<>
          {searchtext && (
            <h2 className='font-medium text-[#666e75] text-xl mb-3'>
              Showing results for <span className='text-[#222328]'>{searchtext}</span>
            </h2>
          )}
          <div className='grid lg:grid-cols-4 sm:grid-cols-3
          xs:grid-cols-2 grid-cols-1 gap-3'>
            {searchtext ?(<RenderCards
            data={searchResults}
            title="No search results found"
            />):( 
              <RenderCards 
              data={allPosts}
              title = "No posts found"
              />
            )}
          </div>
          </>)}
        </div>
      </div>
    </section>
  );
};

export default Home;
